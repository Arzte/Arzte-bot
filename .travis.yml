dist: trusty
language: rust
sudo: required

# Cache cargo symbols for faster build
cache: 
  - cargo
  - npm

  before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

before_script:
  - export PATH=$HOME/.cargo/bin:$PATH
# Disabling these for now as I'm not installing anything else, so this is pointless wasted CI time building this.
# (diseal might be a reason that I'd want this later one)
#  - cargo install cargo-update || echo "cargo-update already installed"
#  - cargo install-update -a # update outdated cached binaries

script:
  - cargo build

before_deploy:
  - npm install @sentry/cli
  - ./node_modules/.bin/sentry-cli releases new "$VERSION"
  - sh ci/before_deploy.sh

deploy:
  # TODO update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key: $GITHUB_TOKEN
  file_glob: true
  file: arzte-$TRAVIS_TAG.*
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases

after_deploy:
  - ./node_modules/.bin/sentry-cli releases finalize "$VERSION"

skip_cleanup: true

notifications:
  email: false